# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and Deploy Python App to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # <-- CHANGE THIS if using a different Python version

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Zip app for deployment
        run: |
          zip -r app.zip . -x "venv/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem  # <-- CHANGE THIS: your EC2 private key must be added as GitHub secret `EC2_KEY`
          chmod 600 key.pem

      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem app.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_APP_DIR }}
          # <-- CHANGE `EC2_USER`, `EC2_HOST`, `EC2_APP_DIR` secrets accordingly

      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ${{ secrets.EC2_APP_DIR }}  # <-- CHANGE THIS: make sure this path exists on EC2
            unzip -o app.zip
            source venv/bin/activate || python3 -m venv venv && source venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart myapp.service  # <-- CHANGE THIS: your appâ€™s systemd service name on EC2
          EOF

        with:
          app-name: 'smh'
          slot-name: 'Production'
          
